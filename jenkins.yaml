jenkins:
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  numExecutors: 1
  remotingSecurity:
    enabled: true
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: admin
          password: admin
  slaveAgentPort: -1
jobs:
  - script: >
      pipelineJob('lineage') {
        definition {
          cpsScm {
            scriptPath 'Jenkinsfile'
            scm {
              git {
                configure { git ->
                  git / 'extensions' / 'hudson.plugins.git.extensions.impl.SparseCheckoutPaths' / 'sparseCheckoutPaths' {
                    'hudson.plugins.git.extensions.impl.SparseCheckoutPath' {
                      path('Jenkinsfile')
                    }
                  }
                }
                extensions {}
                remote {
                  url 'https://github.com/dtrunk90/jenkins-lineage-docker.git'
                }
              }
            }
          }
        }
      }
security:
  scriptApproval:
    approvedSignatures:
      - method groovy.lang.GroovyObject invokeMethod java.lang.String java.lang.Object
      - method groovy.util.Node append groovy.util.Node
      - method groovy.util.Node children
      - method groovy.util.Node replaceNode groovy.util.Node
      - method groovy.util.XmlParser parseText java.lang.String
      - new groovy.util.NodeBuilder
      - new groovy.util.XmlParser
      - staticMethod groovy.xml.XmlUtil serialize groovy.util.Node
      - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods init java.util.List
      - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods getAt java.lang.Object java.lang.String
unclassified:
  gitSCM:
    globalConfigEmail: "john.doe@example.com"
    globalConfigName: "John Doe"
  location:
    url: http://localhost
